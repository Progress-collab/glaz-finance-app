name: Deploy to Windows Server

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm install
        cd backend && npm install
        cd ../frontend && npm install
    
    - name: Run backend tests
      run: |
        cd backend && npm test
    
    - name: Run frontend tests
      run: |
        cd frontend && npm test
    
    - name: Build application
      run: |
        npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm install
        cd backend && npm install
        cd ../frontend && npm install
    
    - name: Build application
      run: |
        npm run build
    
    - name: Deploy to Windows Server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          # Создание директории приложения
          mkdir -p C:\glaz-finance-app
          cd C:\glaz-finance-app
          
          # Остановка существующих контейнеров
          docker-compose down || true
          
          # Очистка старых образов
          docker system prune -f
          
          # Клонирование/обновление репозитория
          if [ -d ".git" ]; then
            git pull origin main
          else
            git clone https://github.com/glazeykin/glaz-finance-app.git .
          fi
          
          # Запуск приложения
          docker-compose up -d --build
          
          # Проверка статуса
          docker-compose ps
          
          # Логи для отладки
          docker-compose logs --tail=50

  backup:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Create backup
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          cd C:\glaz-finance-app
          
          # Создание резервной копии базы данных
          docker-compose exec -T postgres pg_dump -U glaz_user glaz_finance > backup_$(date +%Y%m%d_%H%M%S).sql
          
          # Создание архива с файлами
          tar -czf backup_$(date +%Y%m%d_%H%M%S).tar.gz backup_*.sql
          
          # Очистка старых резервных копий (старше 7 дней)
          find . -name "backup_*.tar.gz" -mtime +7 -delete
