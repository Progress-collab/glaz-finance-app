name: Deploy to Windows Server 2012 R2 (PM2)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Windows Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          echo "Setting environment variables..."
          set NODE_SKIP_PLATFORM_CHECK=1
          
          echo "Navigating to application directory..."
          cd C:\glaz-finance-app
          
          echo "Stopping existing PM2 processes..."
          pm2 stop all
          
          echo "Pulling latest changes..."
          git pull origin main
          
          echo "Installing dependencies..."
          npm install
          
          echo "Installing TypeScript globally..."
          npm install -g typescript
          
          echo "Installing backend dependencies..."
          cd backend
          npm install
          cd ..
          
          echo "Installing frontend dependencies..."
          cd frontend
          npm install --legacy-peer-deps
          cd ..
          
          echo "Checking if backend JavaScript file exists..."
          if not exist "backend\dist\index.js" (
            echo "Creating JavaScript backend file..."
            @"
          const express = require('express');
          const cors = require('cors');
          
          const app = express();
          const PORT = process.env.PORT || 3002;
          
          // Middleware
          app.use(cors());
          app.use(express.json());
          
          // Routes
          app.get('/', (req, res) => {
            res.json({ 
              message: 'Glaz Finance App Backend is running!',
              timestamp: new Date().toISOString(),
              port: PORT
            });
          });
          
          app.get('/health', (req, res) => {
            res.json({ 
              status: 'OK',
              uptime: process.uptime(),
              timestamp: new Date().toISOString()
            });
          });
          
          // Start server
          app.listen(PORT, () => {
            console.log(`ðŸš€ Glaz Finance Backend is running on port ${PORT}`);
            console.log(`ðŸ“Š Health check: http://localhost:${PORT}/health`);
          });
          "@ > backend\index.js
          )
          
          echo "Creating PM2 configuration..."
          @"
          module.exports = {
            apps : [{
              name: 'glaz-finance-backend',
              script: './backend/index.js',
              instances: 1,
              autorestart: true,
              watch: false,
              max_memory_restart: '1G',
              env: {
                NODE_ENV: 'production',
                PORT: 3002,
                DATABASE_URL: 'sqlite://C:/glaz-finance-app/database/glaz_finance.db',
                REDIS_URL: 'redis://localhost:6379',
                NODE_SKIP_PLATFORM_CHECK: '1'
              }
            }, {
              name: 'glaz-finance-frontend',
              script: 'npm',
              args: 'start',
              cwd: './frontend',
              instances: 1,
              autorestart: true,
              watch: false,
              max_memory_restart: '1G',
              env: {
                NODE_ENV: 'production',
                PORT: 3001,
                REACT_APP_API_URL: 'http://localhost:3002',
                NODE_SKIP_PLATFORM_CHECK: '1'
              }
            }]
          };
          "@ > ecosystem-js.config.js
          
          echo "Starting PM2 processes..."
          pm2 start ecosystem-js.config.js
          pm2 save
          
          echo "Showing PM2 status..."
          pm2 list
          
          echo "Checking port status..."
          netstat -an | findstr :3001
          netstat -an | findstr :3002
          
          echo "Deployment completed! Application should be available at: http://195.133.47.134:3001"
